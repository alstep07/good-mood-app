{"version":3,"sources":["index.js"],"names":["App","setupShown","jokesShown","jokeText","jokesType","style","app","appTitle","TypeSwitch","JokeBlock","Button","Counter","LoadIcon","loadIcon","dataStore","progLoadIcon","generalLoadIcon","jokeType","jokeContainer","programming","isDataLoading","JokeText","setJokeContent","jokeUnderscore","content","error","isNewJokeLoaded","setup","appButton","map","type","changeJokesType","join","getRandomJoke","url","getRandomJokeUrl","response","fetch","result","json","currentJoke","punchline","inputValue","setNewRandomJoke","newJoke","shownIds","includes","id","renderApp","setJokePunchLine","document","getElementById","innerHTML","module","hot","accept","window"],"mappings":";;;;;;;AA+JC,aA9JD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,oBA4JC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApID,SAASA,GAAI,WAAEC,EAAF,WAAcC,EAAd,SAA0BC,EAA1B,UAAoCC,IACvC,2BACQC,EAAMC,QAAAA,0BACND,EAAME,QAAAA,sCAChBC,cACAC,EAAUN,EAAUC,aACpBM,EAAOT,aACPU,EAAQT,qBAKhB,SAASU,IACC,kCAEKP,EAAMQ,QAAAA,yBACgB,gBAAxBC,UAAUV,UAA8BW,EAAxC,QAAuDC,EAAgB,qCAKpF,SAASP,EAAUN,EAAUc,GACnB,2BACQZ,EAAMa,QAAAA,iBAA8B,gBAAbD,GAA8BZ,EAAMc,QAAAA,wBACrEL,UAAUM,cAAgBR,IAAaS,EAASlB,iBAIxD,SAASkB,EAASlB,GACR,yBACME,EAAMF,QAAAA,aAAamB,EAAenB,kBAC9CE,EAAMkB,QAAAA,wCAKV,SAASD,EAAenB,GAClBqB,IAAAA,EAAUrB,GAAY,kCAUnBqB,OARHV,UAAUW,QACZD,EAAUV,UAAUW,OAGlBC,MACFF,EAAUrB,GAGLqB,EAGT,SAASd,EAAOiB,GACPA,OAAAA,oBACetB,EAAMuB,QAAAA,6EACNvB,EAAMuB,QAAAA,4DAG9B,SAASjB,EAAQT,GACP,gCAAyBA,QAGnC,SAASM,IAiBC,kDAhBoB,CAAC,UAAW,eACrCqB,IACCC,mDAGYA,uFAGOC,8BACXjB,UAAUV,YAAc0B,EAAO,UAAY,oBAC3CA,mCAITE,KAAK,UAQV,eAAeC,EAAchB,GACrBiB,MAAAA,EAAMC,EAAiBlB,GACzB,IACImB,MAAAA,QAAiBC,MAAMH,GAEtBI,aADcF,EAASG,OAE9B,MAAOd,GACPX,UAAUW,MAAQA,GAItB,SAASC,IACAZ,OAAAA,UAAUX,UAAYW,UAAU0B,YAAYC,YAAc3B,UAAUX,SAG7E,SAASgC,EAAiBlB,GAChB,qDAA8CA,WAGxD,SAASc,EAAgBW,GACvB5B,UAAUV,UAAYsC,EAGxB,eAAeC,IAETC,IAAAA,EACG,IAFP9B,UAAUM,eAAgB,GAElBwB,GAAW9B,UAAU+B,SAASC,SAASF,EAAQG,KACrDC,KACCJ,SAAiBX,EAAcnB,UAAUV,WAE5CU,UAAU+B,SAAW,IAAI/B,UAAU+B,SAAUD,EAAQG,IACrDjC,UAAU0B,YAAcI,EACxB9B,UAAUX,SAAWW,UAAU0B,YAAYb,MAC3Cb,UAAUb,YAAa,EACvBa,UAAUM,eAAgB,EAC1BN,UAAUZ,aACV8C,IAGF,SAASC,IACPnC,UAAUX,SAAWW,UAAU0B,YAAYC,UAC3C3B,UAAUb,YAAa,EACvB+C,IAGF,SAASA,IACPE,SAASC,eAAe,YAAYC,mBAChCpD,EAAIc,iBAxJNuC,OAAOC,KACTD,OAAOC,IAAIC,SAGbC,OAAO1C,UAAY,CACjBb,YAAY,EACZuC,YAAa,GACbrC,SAAU,GACVD,WAAY,EACZE,UAAW,UACXyC,SAAU,GACVpB,MAAO,KACPL,eAAe,GAGjBoC,OAAOR,UAAYA,EACnBQ,OAAOP,iBAAmBA,EAC1BO,OAAOb,iBAAmBA,EAC1Ba,OAAOzB,gBAAkBA,EAEzBmB,SAASC,eAAe,YAAYC,UAAYpD,EAAIc","file":"good-mood.f2994704.js","sourceRoot":"..","sourcesContent":["/* eslint-disable no-console */\nimport style from './style.css';\nimport generalLoadIcon from './load_general.gif';\nimport progLoadIcon from './load_prog.gif';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.dataStore = {\n  setupShown: false,\n  currentJoke: '',\n  jokeText: '',\n  jokesShown: 0,\n  jokesType: 'general',\n  shownIds: [],\n  error: null,\n  isDataLoading: false,\n};\n\nwindow.renderApp = renderApp;\nwindow.setJokePunchLine = setJokePunchLine;\nwindow.setNewRandomJoke = setNewRandomJoke;\nwindow.changeJokesType = changeJokesType;\n\ndocument.getElementById('app-root').innerHTML = App(dataStore);\n\nfunction App({ setupShown, jokesShown, jokeText, jokesType }) {\n  return `\n    <div class=\"${style.app}\">\n      <h1 class=${style.appTitle}>Good Mood App</h1>\n      ${TypeSwitch()}\n      ${JokeBlock(jokeText, jokesType)}\n      ${Button(setupShown)}\n      ${Counter(jokesShown)}\n    </div>\n  `;\n}\n\nfunction LoadIcon() {\n  return `\n    <img\n      class=\"${style.loadIcon}\"\n      src=\"${dataStore.jokesType === 'programming' ? progLoadIcon : generalLoadIcon}\"\n      alt=\"loading\">\n  `;\n}\n\nfunction JokeBlock(jokeText, jokeType) {\n  return `\n    <div class=\"${style.jokeContainer} ${jokeType === 'programming' && style.programming}\">\n      ${dataStore.isDataLoading ? LoadIcon() : JokeText(jokeText)}\n    </div>`;\n}\n\nfunction JokeText(jokeText) {\n  return `\n    <p class=\"${style.jokeText}\">${setJokeContent(jokeText)}<span class=\"${\n    style.jokeUnderscore\n  }\">&nbsp;</span></p>\n  `;\n}\n\nfunction setJokeContent(jokeText) {\n  let content = jokeText || 'Click the button to get a joke!';\n\n  if (dataStore.error) {\n    content = dataStore.error;\n  }\n\n  if (isNewJokeLoaded()) {\n    content = jokeText;\n  }\n\n  return content;\n}\n\nfunction Button(setup) {\n  return setup\n    ? `<button class=\"${style.appButton}\" onclick=setJokePunchLine()>Punchline</button>`\n    : `<button class=\"${style.appButton}\" onclick=setNewRandomJoke()>Get a joke</button>`;\n}\n\nfunction Counter(jokesShown) {\n  return `<p>Already read jokes: ${jokesShown}</p>`;\n}\n\nfunction TypeSwitch() {\n  const typeInputComponents = ['general', 'programming']\n    .map(\n      type =>\n        `<label>\n            <input\n            id='${type}'\n            type='radio'\n            name='jokes-type'\n            onchange='(${changeJokesType})(this.id);'\n            ${dataStore.jokesType === type ? 'checked' : ''}>\n            ${type}\n          </label>\n        `,\n    )\n    .join('');\n\n  return `\n    <p>Choose jokes category:</p>\n    ${typeInputComponents}\n  `;\n}\n\nasync function getRandomJoke(jokeType) {\n  const url = getRandomJokeUrl(jokeType);\n  try {\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    dataStore.error = error;\n  }\n}\n\nfunction isNewJokeLoaded() {\n  return dataStore.jokeText && dataStore.currentJoke.punchline !== dataStore.jokeText;\n}\n\nfunction getRandomJokeUrl(jokeType) {\n  return `https://official-joke-api.appspot.com/jokes/${jokeType}/random`;\n}\n\nfunction changeJokesType(inputValue) {\n  dataStore.jokesType = inputValue;\n}\n\nasync function setNewRandomJoke() {\n  dataStore.isDataLoading = true;\n  let newJoke;\n  while (!newJoke || dataStore.shownIds.includes(newJoke.id)) {\n    renderApp();\n    [newJoke] = await getRandomJoke(dataStore.jokesType);\n  }\n  dataStore.shownIds = [...dataStore.shownIds, newJoke.id];\n  dataStore.currentJoke = newJoke;\n  dataStore.jokeText = dataStore.currentJoke.setup;\n  dataStore.setupShown = true;\n  dataStore.isDataLoading = false;\n  dataStore.jokesShown++;\n  renderApp();\n}\n\nfunction setJokePunchLine() {\n  dataStore.jokeText = dataStore.currentJoke.punchline;\n  dataStore.setupShown = false;\n  renderApp();\n}\n\nfunction renderApp() {\n  document.getElementById('app-root').innerHTML = `\n    ${App(dataStore)}\n  `;\n}\n"]}